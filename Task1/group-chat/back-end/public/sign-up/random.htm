<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <title>Document</title>
    <style>
        body {
            padding: 0;
            margin: 0;
            /* display: flex; */
            justify-content: center;
        }

        #message-container {
            width: 80%;
            max-width: 1200px;
        }

        #message-container div {
            background-color: #CCC;
            /* margin-right: ; */
            padding: 5px;
        }

        #message-container div:nth-child(2n) {
            background-color: #FFF;
        }

        #send-container {
            /* position: fixed; */
            padding-bottom: 30px;
            /* bottom: 0; */
            background-color: white;
            max-width: 1200px;
            width: 80%;
            /* display: flex; */
        }

        #message-input {
            flex-grow: 1;
        }
    </style>
</head>

<body>
    <!-- <div id="message-container"></div>
    <form id="send-container">
        <label for="message-input">Message</label>
        <input type="text" id="message-input" />
        <button type="submit" id="send-button">Send</button>
        <br>
        <label for="room">Room</label>
        <input type="text" id="room" />
        <button type="button" id="join-button">Join</button>
        <br>
        <label for="file">Choose file</label>
        <input type="file" id="file" name="file" />
    </form> -->
    <h1 class="title">Hello World! </h1>
      <p id="currentTime"></p>
      <input type="search" name="search" id="search" placeholder="search" />
      <div class="searchInput"></div>
    <!-- <script src="http://localhost:5000/socket.io/socket.io.js"></script> -->
    <script>
        // "use strict";
        // const math = {
        //     mix(a, b, cb){
        //         console.log(a + b);
        //         cb(a*b);
        //     }
        // };
        // function first(a, b) {
        //     {
        //         var c = 18;
        //         // var c = 6;
        //         math.mix(c, 5, (e) => {
        //             {
        //                 c = e;
        //             }
        //         })                
        //         console.log(c);
        //     }
        //     console.log(c);
        // }
        // // console.log(c);
        // const arrow = () => { 
        //     const constant = 'some';
        //     console.log(this);
        // };
        // function normal() {
        //     const variable = 'any';
        //     console.log(this);
        // }
        // normal();
        // first(3, 4);
        // arrow();
        // const socket = io('http://localhost:5000');
        // const userSocket = io('http://localhost:5000/user', { auth: { token: "Test" } });


        const messageContainer = document.getElementById('message-container')
        const messageForm = document.getElementById('send-container')
        const messageInput = document.getElementById('message-input');
        const join = document.getElementById('join-button');

        // const name = prompt('What is your name?')
        // socket.emit('new-user', name)
        // socket.on('connect', () => appendMessage(`Your connection id is ${socket.id}`));

        // userSocket.on('connect_error', error => appendMessage(error))
        // let count = 0;
        // setInterval(() => {
        //     count++;
        //     socket.emit('ping', count);
        // }, 1000);

        // document.onkeydown = (e) => {
        //     console.log(90);
        //     if (e.target.matches('input')) return;
        //     if (e.key === 'c') socket.connect();
        //     if (e.key === 'd') socket.disconnect();
        // }
        // socket.on('chat-message', data => {
        //     appendMessage(`${data.name}: ${data.message}`)
        // })

        // socket.on('user-connected', name => {
        //     appendMessage(`${name} connected`)
        // })
        // socket.on('roger', message => appendMessage(message));

        // socket.on('user-disconnected', name => {
        //     appendMessage(`${name} disconnected`)
        // })

        // messageForm.addEventListener('submit', e => {
        //     e.preventDefault();
        //     const fileChosen = e.target.file.value;
        //     const message = messageInput.value;
        //     const room = document.getElementById('room').value;
        //     console.log(message, fileChosen);
        //     appendMessage(`You: ${message}`)
        //     // socket.emit('send-message', message, room, () => {
        //     //     messageContainer.lastElementChild.innerHTML += `<span style='margin-left: 2vw;'>Sent</span>`;
        //     // });
        //     messageInput.value = ''
        // })
        // join.onclick = () => {
        //     const room = document.getElementById('room').value;
        //     socket.emit('join-room', room, appendMessage);
        // }

        // function appendMessage(message) {
        //     const messageElement = document.createElement('div')
        //     messageElement.innerText = message;
        //     messageContainer.append(messageElement)
        // }            

        const body = document.querySelector('body');
        body.innerHTML += `<div class="parent d-none">Mallikarjuna Rao<div class="child d-none">9912027885          
            <div class="grandChild">kmrao885@gmail.com</div></div></div>`;

        const parentdiv = document.querySelector('.parent');
        const searchData = document.getElementById('search');
        searchData.onkeydown = () => {
            if (parentdiv.textContent.toLowerCase().indexOf(searchData.value.toLowerCase()) >= 0) {
                // document.querySelector('.searchInput').textContent = searchData.value;
                parentdiv.classList.remove('d-none');
            }else {
                parentdiv.classList.add('d-none');
            }
        }
    </script>
</body>

</html>