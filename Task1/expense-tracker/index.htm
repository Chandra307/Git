<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Expense Tracker</title>
    <style>
        form {
            width: 18rem;
            margin: auto;
            padding: 3rem 1rem 1rem;
        }

        label {
            display: block;
            margin-top: 0.5rem;
        }

        input {
            width: 95%;
            margin-top: 1px;
        }

        button {
            margin: 0.5rem 0;
            /* display: block; */
        }

        select {
            width: 97%;
            height: 1.3rem;
        }
        h2 {
            text-align: center;
        }
        div {
            width: fit-content;
            margin: auto;
        }
    </style>
</head>

<body>
    <h2 class="premium"
    style="float: right;color: rgb(249, 114, 99);margin-right: 5rem;margin-top: 0;font-family: arial;"></h2>
    <div>
        <form>
            <label for="amount">Enter expense amount</label>
            <input type="number" id="amount" name="amount" min="1" required />
            <label for="desc">Enter description</label>
            <input type="text" id="desc" name="description" required />
            <label for="category">Choose a category</label>
            <select id="category" name="category" required>
                <option value="">--from below--</option>
                <option>Movie</option>
                <option>Picnic</option>
                <option>Exhibition</option>
                <option>Household</option>
            </select>
            <button type="submit">Add Expense</button>
        </form>
        <button id="premium" style="display: none;">Buy Premium</button>
        <button id="leader" style="display: none;">Show Leaderboard</button>
    </div>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <div id="expenses">
        <h2>Expenses</h2>
    </div>
    <div id="leaderboard"></div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.5.0/axios.min.js"></script>
    <script>
        const ul = document.getElementById('expenses');
        document.querySelector('form').onsubmit = async (e) => {
            try {
                e.preventDefault();

                if (document.querySelector('#error')) {
                    document.querySelector('#error').remove();
                }

                const obj = {
                    amount: e.target.amount.value,
                    description: e.target.description.value,
                    category: e.target.category.value
                };
                e.target.reset();
                console.log(obj);
                const token = localStorage.getItem('token');
                const response = await axios.post('http://localhost:3000/expense/addexpense', obj, { headers: { "Authorization": token } });
                displayExpenses(response.data);
            }
            catch (err) {
                document.querySelector('form').innerHTML = `<p id='error' style='color: red;'>${err}</p>`;
            }
        }
        
        window.addEventListener('DOMContentLoaded', async () => {
            try {
                const token = localStorage.getItem('token');
                console.log(token);
                const response = await axios.get('http://localhost:3000/expense/getexpenses', { headers: { "Authorization": token } });
                response.data.expenses.forEach(expense => {
                    displayExpenses(expense);
                })
                if (response.data.premium) {
                    
                    showLeaderboard();
                    document.getElementById('premium').remove();
                    document.querySelector('.premium').textContent = 'Premium User';
                }
                else {
                    document.getElementById('premium').removeAttribute('style');
                    document.getElementById('premium').style.marginLeft = '1rem';
                }
            }
            catch (err) {
                console.log(err);
            }
        })

        document.getElementById('premium').onclick = async (e) => {
            try {
                // e.preventDefault();
                const token = localStorage.getItem('token');
                const response = await axios.get('http://localhost:3000/premium/purchase', { headers: { "Authorization": token } });
                var options = {
                    "key": response.data.key_id,
                    "order_id": response.data.order.id,
                    "handler": async function (result) {
                        try {
                            await axios.post('http://localhost:3000/premium/updateStatus', {
                                order_id: options.order_id,
                                payment_id: result.razorpay_payment_id
                            }, { headers: { "Authorization": token } });

                            alert('You are a premium user now!');
                            document.getElementById('premium').remove();
                            showLeaderboard();                        
                            document.querySelector('.premium').textContent = 'Premium User';
                        }
                        catch (err) {
                            console.log(err);
                        }
                    }
                }
                const rzpl = new Razorpay(options);
                rzpl.open();
                e.preventDefault();

                rzpl.on('payment.failed', async function ({error: {metadata}}) {
                    console.log(metadata, 'failure it is');
                    try {
                        await axios.post('http://localhost:3000/premium/updateStatus', {
                            status: "failed",
                            order_id: options.order_id,
                            payment_id: metadata.payment_id
                        }, { headers: { "Authorization": token } });
                        alert('Sorry, payment failed!');
                    }
                    catch (err) {
                        console.log(err);
                    }
                })
            }
            catch (err) {
                console.log(err);
            }
        }

        function displayExpenses(obj) {
            ul.innerHTML += `<li id='${obj.id}'>${obj.amount} - ${obj.description} - ${obj.category}
                <button onclick='deleteExpense(${obj.id})'>Delete Expense</button></li>`;
        }

        function showLeaderboard(obj){

            document.getElementById('leader').removeAttribute('style');
            document.querySelector('#leader').style.marginLeft = '1rem';

            document.querySelector('#leader').onclick = async (e) => {
            try{
                document.getElementById('leaderboard').innerHTML += `<h2 style='font-family: arial;'>Leaderboard</h2>`;

                const response = await axios.get('http://localhost:3000/premium/leaderboard');
                response.data.forEach(detail => {
                    document.getElementById('leaderboard').innerHTML += `<li id='${detail.name}' style='font-size: 1.1rem;'>${detail.name} - Total expenses: ${Number(detail.totalExpenses)}</li>`;
                });
            }
            catch(err){
                console.log(err);
            }
        }
        }
        
        async function deleteExpense(id) {
            try {

                if (document.querySelector('#error')) {
                    document.querySelector('#error').remove();
                }

                const token = localStorage.getItem('token');
                await axios.delete(`http://localhost:3000/expense/delete-expense/${id}`, { headers: { "Authorization": token } });
                alert('Delete this expense?');
                document.getElementById(id).remove();
            }
            catch (err) {
                console.log(err);
                ul.innerHTML += `<h3 id='error' style='color: red; font-family: sans-serif;'>${err.response.data}</h3>`;
            }
        }
    </script>
</body>

</html>